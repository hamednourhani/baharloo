<?phpif ( ! isset( $content_width ) ) {    $content_width = 1170;}if( ! function_exists( 'hnm_theme_setup' ) ) :    function hnm_theme_setup() {        $locale = apply_filters( 'plugin_locale', get_locale(), 'health-plus' );        load_textdomain( 'health-plus', WP_LANG_DIR . "/$locale.mo" );        load_theme_textdomain( 'health-plus', get_template_directory() . '/languages' );        add_theme_support( 'post-thumbnails' );        add_theme_support( 'title-tag' );        add_theme_support( 'automatic-feed-links' );        add_theme_support( 'custom-background' );        add_theme_support( 'custom-header' );        register_nav_menus(            array(                'primary'   => __( 'Primary Menu', 'health-plus' )            )        );        add_theme_support( 'html5', array(            'search-form', 'comment-form', 'commentlist', 'gallery', 'caption'        ) );        set_post_thumbnail_size( 710, 330, true );        global $pagenow;        if ( is_admin() && 'themes.php' == $pagenow && isset( $_GET['activated'] ) ) {            wp_redirect( admin_url( "themes.php?page=hnm-setup" ) );            exit;        }    }endif;add_action( 'after_setup_theme', 'hnm_theme_setup' );function hnm_js_detection() {    echo "<script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script>\n";}add_action( 'wp_head', 'hnm_js_detection', 0 );function hnm_widgets_init() {    register_widget( 'HNM_Widget_Appointment' );    register_sidebar(array(        'name'          => __( 'Blog', 'health-plus' ),        'id'            => 'sidebar-blog',        'before_widget' => '<div id="%1$s" class="width sidebar-widget %2$s">',        'after_widget'  => '</div>',        'before_title'  => '<h2>',        'after_title'   => '</h2>'    ));    register_sidebar(array(        'name'          => __( 'Page', 'health-plus' ),        'id'            => 'sidebar-page',        'before_widget' => '<div id="%1$s" class="widget sidebar-widget %2$s">',        'after_widget'  => '</div>',        'before_title'  => '<h2>',        'after_title'   => '</h2>'    ));    register_sidebar(array(        'name'          => __( 'Footer', 'health-plus' ),        'id'            => 'sidebar-footer',        'before_widget' => '<div id="%1$s" class="col-sm-6 col-md-3 col-lg-3 all-need %2$s">',        'after_widget'  => '</div>',        'before_title'  => '<h2>',        'after_title'   => '</h2>'    ));}add_action( 'widgets_init', 'hnm_widgets_init' );function hnm_scripts() {    if ( is_singular() )        wp_enqueue_script( 'comment-reply' );    wp_enqueue_script( 'modernizer',    get_template_directory_uri() . '/js/modernizr.custom.68477.js' );    wp_enqueue_script( 'bootstrap',     get_template_directory_uri() . '/js/bootstrap.min.js',              array( 'jquery' ), '', true );    wp_enqueue_script( 'selectbox',     get_template_directory_uri() . '/js/jquery.selectbox-0.2.js',       array( 'jquery' ), '', true );    wp_enqueue_script( 'plugins',       get_template_directory_uri() . '/js/plugins.js',                    array( 'jquery' ), '', true );    wp_enqueue_script( 'bxslider',      get_template_directory_uri() . '/js/jquery.bxslider.js',            array( 'jquery' ), '', true );    wp_enqueue_script( 'main',          get_template_directory_uri() . '/js/main.js',                       array( 'jquery' ), '', true );    wp_enqueue_script( 'datetpicker',   get_template_directory_uri() . '/js/bootstrap-datetimepicker.js',   array( 'jquery' ), '', true );}add_action( "wp_enqueue_scripts", "hnm_scripts" );function hnm_styles(){	wp_register_style( 'default',       get_stylesheet_uri() );    wp_register_style( 'pixar-bootstrap3',     get_template_directory_uri() . '/css/bootstrap.min.css' );    wp_register_style( 'variation2',    get_template_directory_uri() . '/css/custom-variation2.css' );    wp_register_style( 'selectbox',     get_template_directory_uri() . '/css/jquery.selectbox.css' );    wp_register_style( 'responsive',    get_template_directory_uri() . '/css/responsive.css' );    wp_register_style( 'pixar-font-awesome',  get_template_directory_uri() . '/css/font-awesome.min.css' );    wp_enqueue_style( 'pixar-font-awesome' );    wp_enqueue_style( 'pixar-bootstrap3' );    wp_enqueue_style( 'selectbox' );    wp_enqueue_style( 'variation2' );    wp_enqueue_style( 'responsive' );    wp_enqueue_style( 'default' );}add_action( 'wp_enqueue_scripts', 'hnm_styles' );function hnm_fonts_url() {    $font_url = '';    if ( 'off' !== _x( 'on', 'Google font: on or off', 'studio' ) ) {        $font_url = add_query_arg( 'family', urlencode( 'Open Sans:400,600,700,800|Raleway:500,600,700,800,900,400,300|Lora:400,400italic' ), "//fonts.googleapis.com/css" );    }    return $font_url;}function hnm_fonts() {    wp_enqueue_style( 'hnm-fonts', hnm_fonts_url(), array(), '1.0.0' );}add_action( 'wp_enqueue_scripts', 'hnm_fonts' );function hnm_admin_scripts() {    wp_register_style(        'admin-panel-css',        get_template_directory_uri() . '/css/admin.css',        array(),        time(),        'all'    );    wp_enqueue_style( 'admin-panel-css' );}add_action( 'admin_enqueue_scripts', 'hnm_admin_scripts' );function hnm_import_data() {    require_once get_template_directory()  . '/includes/import/class-importer.php';    if ( ! class_exists( 'Auto_Importer' ) )        die( 'Auto_Importer not found' );    $args = array(        'file'        => get_template_directory() . '/includes/import/data.xml',        'map_user_id' => 1    );    auto_import( $args );}add_filter( 'import_allow_create_users', '__return_false' );add_filter( 'import_allow_fetch_attachments', '__return_true' );$includes = array(    'class-setup.php',    'class-tgmpa.php',    'class-tgm-plugin-activation.php',    'class-menu-walker.php',    'shortcodes.php',    'shortcodes-vc-integration.php',    'plugins-integration.php',    'meta-boxes.php',    'extras.php',    'theme-options.php',    'import/page.php',    'class-widget-appointment.php',    'wp-updates-theme.php');foreach ( $includes as $file ) {    require( get_template_directory() . '/includes/' . $file );}function pt_remove_redux_demo() {    if ( class_exists('ReduxFrameworkPlugin') ) {        remove_filter( 'plugin_row_meta', array( ReduxFrameworkPlugin::get_instance(), 'plugin_metalinks'), null, 2 );    }    if ( class_exists('ReduxFrameworkPlugin') ) {        remove_action('admin_notices', array( ReduxFrameworkPlugin::get_instance(), 'admin_notices' ) );    }}add_action('init', 'pt_remove_redux_demo');global $hnmOpt;if( isset( $hnmOpt['envato_api_key'] ) && !empty( $hnmOpt['envato_api_key'] ) ){    $purchase_code = $hnmOpt['envato_api_key'];    new WPUpdatesThemeUpdater_1606( 'http://wp-updates.com/api/2/theme', basename( get_template_directory() ), $purchase_code  );}/*------------------Widgets------------------------------------*/class contact_info_widget extends WP_Widget {    function __construct() {        parent::__construct(        // Base ID of your widget        'contact_info_widget',        // Widget name will appear in UI        __('Contact Informaion Widget', 'health-plus'),        // Widget description        array( 'description' => __( 'Display Contact Information', 'health-plus' ), )        );    }    // Creating widget front-end    // This is where the action happens    public function widget( $args, $instance ) {        global $wp_query;        $title = apply_filters( 'widget_title', $instance['title'] );        $address = $instance['address'];        $phone = $instance['phone'];        $fax = $instance['fax'];        $email = $instance['email'];        $content = '<main class="widgetbody">';        $content .='<p><i class="fa fa-map-marker"></i>'.$address.'</p>';        $content .='<p><i class="fa fa-phone"></i>'.$phone.'</p>';        $content .='<p><i class="fa fa-fax"></i>'.$fax.'</p>';        $content .='<p><i class="fa fa-envelope"></i>'.$email.'</p>';        $content .= '</main>';        // before and after widget arguments are defined by themes        echo $args['before_widget'];        if ( ! empty( $title ) )          echo $args['before_title'] . $title . $args['after_title'];          echo $content;        // This is where you run the code and display the output          echo $args['after_widget'];    }    // Widget Backend    public function form( $instance ) {        if ( isset( $instance[ 'title' ] ) ) {            $title = $instance[ 'title' ];        }else {            $title = __( 'Last Posts', 'health-plus' );        }        if ( isset( $instance[ 'address' ] ) ) {            $address = $instance[ 'address' ];        }else {            $address = "No. ----";        }        if ( isset( $instance[ 'phone' ] ) ) {            $phone = $instance[ 'phone' ];        }else {            $phone = "+98 ----";        }        if ( isset( $instance[ 'fax' ] ) ) {            $fax = $instance[ 'fax' ];        }else {            $fax = "+98 ----";        }        if ( isset( $instance[ 'email' ] ) ) {            $email = $instance[ 'email' ];        }else {            $email = "info@email.com";        }        // Widget admin form        ?>        <p>            <label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e( 'Title:' ); ?></label>            <input class="widefat" id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" type="text" value="<?php echo esc_attr( $title ); ?>" />        </p>         <p>            <label for="<?php echo $this->get_field_id( 'address' ); ?>"><?php _e( 'Address :','health-plus' ); ?></label>            <input class="widefat" id="<?php echo $this->get_field_id( 'address' ); ?>" name="<?php echo $this->get_field_name( 'address' ); ?>" type="text" value="<?php echo esc_attr( $address ); ?>" />        </p>         <p>            <label for="<?php echo $this->get_field_id( 'phone' ); ?>"><?php _e( 'Phone :','health-plus' ); ?></label>            <input class="widefat" id="<?php echo $this->get_field_id( 'phone' ); ?>" name="<?php echo $this->get_field_name( 'phone' ); ?>" type="text" value="<?php echo esc_attr( $phone ); ?>" />        </p>        <p>            <label for="<?php echo $this->get_field_id( 'fax' ); ?>"><?php _e( 'Fax :','health-plus' ); ?></label>            <input class="widefat" id="<?php echo $this->get_field_id( 'fax' ); ?>" name="<?php echo $this->get_field_name( 'fax' ); ?>" type="text" value="<?php echo esc_attr( $fax ); ?>" />        </p>        <p>            <label for="<?php echo $this->get_field_id( 'email' ); ?>"><?php _e( 'Email Address :','health-plus' ); ?></label>            <input class="widefat" id="<?php echo $this->get_field_id( 'email' ); ?>" name="<?php echo $this->get_field_name( 'email' ); ?>" type="text" value="<?php echo esc_attr( $email ); ?>" />        </p>        <?php    }    // Updating widget replacing old instances with new    public function update( $new_instance, $old_instance ) {        $instance = array();        $instance['title'] = ( ! empty( $new_instance['title'] ) ) ? strip_tags( $new_instance['title'] ) : '';        $instance['address'] = ( ! empty( $new_instance['address'] ) ) ? strip_tags( $new_instance['address'] ) : '';        $instance['phone'] = ( ! empty( $new_instance['phone'] ) ) ? strip_tags( $new_instance['phone'] ) : '';        $instance['fax'] = ( ! empty( $new_instance['fax'] ) ) ? strip_tags( $new_instance['fax'] ) : '';        $instance['email'] = ( ! empty( $new_instance['email'] ) ) ? strip_tags( $new_instance['email'] ) : '';        return $instance;    }} // Class wpb_widget ends here// Register and load the widgetfunction health_plus_widget() {//  register_widget( 'last_products_widget' );  register_widget( 'contact_info_widget' );}add_action( 'widgets_init', 'health_plus_widget' );